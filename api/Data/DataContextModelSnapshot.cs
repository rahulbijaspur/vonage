// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Data;

namespace api.data
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("api.Entities.ConnectionCreated", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("connectiondata")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("connectiondata");
                });

            modelBuilder.Entity("api.Entities.TokboxSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SessionId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("archiveId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("isArchive")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.ToTable("Session");
                });

            modelBuilder.Entity("api.Entities.TokboxTokens", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("tokboxSessionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("token")
                        .HasColumnType("TEXT");

                    b.Property<int?>("userId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("tokboxSessionId");

                    b.HasIndex("userId");

                    b.ToTable("Tokens");
                });

            modelBuilder.Entity("api.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("api.Entities.TokboxSession", b =>
                {
                    b.HasOne("api.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("api.Entities.TokboxTokens", b =>
                {
                    b.HasOne("api.Entities.TokboxSession", "tokboxSession")
                        .WithMany()
                        .HasForeignKey("tokboxSessionId");

                    b.HasOne("api.Entities.User", "user")
                        .WithMany()
                        .HasForeignKey("userId");

                    b.Navigation("tokboxSession");

                    b.Navigation("user");
                });
#pragma warning restore 612, 618
        }
    }
}
